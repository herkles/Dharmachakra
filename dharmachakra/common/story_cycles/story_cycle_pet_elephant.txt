story_cycle_pet_elephant = {

	on_setup = {
		assign_elephant_gender_effect = { GENDER = random }
		assign_elephant_skin_color_effect = { COLOR = random }
		set_variable = {
			name = elephant_age_variable
			value = 0
		}

		story_owner = {
			add_character_modifier = {
				modifier = elephant_story_modifier
			}
			add_character_flag = had_elephant_story
		}

	}

	on_end = {
		story_owner = {
			remove_elephant_story_modifiers_effect = yes
			remove_variable = story_cycle_elephant_name
		}
	}

	on_owner_death = {
		story_owner = {
			save_scope_as = story_owner
			if = {
				limit = {
					any_relation = {
						type = friend
						NOT = {
							any_owned_story = {
									story_type = story_cycle_pet_elephant
								}
						}
						NOR = {
							has_relation_rival = scope:story.story_owner
							has_relation_potential_rival = scope:story.story_owner
						}
					}
				}
				every_relation = {
					type = friend
					limit = {
						NOT = {
							any_owned_story = {
									story_type = story_cycle_pet_elephant
								}
						}
						NOR = {
							has_relation_rival = scope:story.story_owner
							has_relation_potential_rival = scope:story.story_owner
						}
					}
					add_to_list = can_get_elephant
				}
			}
			if = {
				limit = {
					any_relation = {
						type = lover
						NOT = {
							any_owned_story = {
									story_type = story_cycle_pet_elephant
								}
						}
						NOT = { is_in_list = can_get_elephant }
						NOR = {
							has_relation_rival = scope:story.story_owner
							has_relation_potential_rival = scope:story.story_owner
						}
					}
				}
				every_relation = {
					type = lover
					limit = {
						NOT = {
							any_owned_story = {
									story_type = story_cycle_pet_elephant
								}
						}
						NOT = { is_in_list = can_get_elephant }
						NOR = {
							has_relation_rival = scope:story.story_owner
							has_relation_potential_rival = scope:story.story_owner
						}
					}
					add_to_list = can_get_elephant
				}
			}
			if = {
				limit = {
					any_child = {
						NOT = {
							any_owned_story = {
									story_type = story_cycle_pet_elephant
								}
						}
						NOT = { is_in_list = can_get_elephant }
						NOR = {
							has_relation_rival = scope:story.story_owner
							has_relation_potential_rival = scope:story.story_owner
						}
					}
				}
				every_child = {
					limit = {
						NOT = {
							any_owned_story = {
									story_type = story_cycle_pet_elephant
								}
						}
						NOT = { is_in_list = can_get_elephant }
						NOR = {
							has_relation_rival = scope:story.story_owner
							has_relation_potential_rival = scope:story.story_owner
						}
					}
					add_to_list = can_get_elephant
				}
			}
			if = {
				limit = {
					any_consort = {
						NOT = {
							any_owned_story = {
									story_type = story_cycle_pet_elephant
								}
						}
						NOT = { is_in_list = can_get_elephant }
						NOR = {
							has_relation_rival = scope:story.story_owner
							has_relation_potential_rival = scope:story.story_owner
						}
					}
				}
				every_consort = {
					limit = {
						NOT = {
							any_owned_story = {
								story_type = story_cycle_pet_elephant
							}
						}
						NOT = { is_in_list = can_get_elephant }
						NOR = {
							has_relation_rival = scope:story.story_owner
							has_relation_potential_rival = scope:story.story_owner
						}
					}
					add_to_list = can_get_elephant
				}
			}
			if = {
				limit = {
					any_in_list = {
						list = can_get_elephant
						count >= 1
					}
					exists = scope:story #There seems to be instances where the story is already gone
					exists = scope:story.var:story_cycle_elephant_name
				}
				random_in_list = {
					list = can_get_elephant
					weight = {
						base = 10
						modifier = {
							add = 100
							is_player_heir_of_trigger = { CHARACTER = scope:story.story_owner }
						}
						modifier = {
							add = 50
							is_child_of = scope:story.story_owner
						}
					}
					save_scope_as = person_inheriting
					scope:story = {
						set_variable = {
							name = original_owner
							value = scope:story.story_owner
						}
					}
					trigger_event = pet_animal.0198
				}
				transfer_elephant_story_cycle_to_effect = {
					CHARACTER = scope:person_inheriting
					STORY = scope:story
				}
			}
			else = {
				scope:story = { end_story = yes }
			}
		}
	}

	# Give the elephant a name!
	effect_group = {
		days = { 2 4 }
		chance = 100
	
		triggered_effect = {
			trigger = {
				story_owner = {
					NOT = { has_character_flag = is_naming_elephant }
				}
				NOT = { exists = story_owner.var:story_cycle_elephant_name }
			}
			effect = {
				if = {
					limit = { has_multiple_players = yes }
					story_owner = {
						assign_name_options_elephant_story_cycle_effect = yes
						assign_name_options_elephant_story_cycle_effect = yes
						assign_name_options_elephant_story_cycle_effect = yes
						random_list = {
							1 = {
								trigger = { has_character_flag = name_raja }
								set_variable = { name = story_cycle_elephant_name value = flag:Raja }
							}
							1 = {
								trigger = { has_character_flag = name_balarama }
								set_variable = { name = story_cycle_elephant_name value = flag:Balarama }
							}
							1 = {
								trigger = { has_character_flag = name_drona }
								set_variable = { name = story_cycle_elephant_name value = flag:Drona }
							}
							1 = {
								trigger = { has_character_flag = name_arjuna }
								set_variable = { name = story_cycle_elephant_name value = flag:Arjuna }
							}
							1 = {
								trigger = { has_character_flag = name_hanno }
								set_variable = { name = story_cycle_elephant_name value = flag:Hanno }
							}
							1 = {
								trigger = { has_character_flag = name_cruibne }
								set_variable = { name = story_cycle_elephant_name value = flag:Cruibne }
							}
							1 = {
								trigger = { has_character_flag = name_kaavan }
								set_variable = { name = story_cycle_elephant_name value = flag:Kaavan }
							}
							1 = {
								trigger = { has_character_flag = name_suleiman }
								set_variable = { name = story_cycle_elephant_name value = flag:Suleiman }
							}
							1 = {
								trigger = { has_character_flag = name_kandula }
								set_variable = { name = story_cycle_elephant_name value = flag:Kandula }
							}
						}
						clear_name_options_elephant_story_cycle_effect = yes
					}
				}
				else = {
					story_owner = {
						add_character_flag = is_naming_elephant
						trigger_event = dharma_elephants.200
					}
				}
			}
		}
	}

	#To save the name in the story's scope (can for some reason not be done in the naming event itself)
	effect_group = {
		days = 5
		chance = 100
	
		triggered_effect = {
			trigger = {
				exists = story_owner.var:story_cycle_elephant_name
			}
			effect = {
				set_variable = {
					name = story_cycle_elephant_name
					value = scope:story.story_owner.var:story_cycle_elephant_name
				}
			}
		}
	}

	#Age the elephant
	effect_group = {
		days = 365

		trigger = {
			exists = var:cat_age_variable
		}

		triggered_effect = {
			trigger = { always = yes }
			effect = {
				change_variable = {
					name = cat_age_variable
					add = 1
				}
			}
		}
	}

	 # The cat dies :(
	effect_group = {
		days = { 4000 6000 }
		chance = 100
	
		triggered_effect = {
			trigger = {
				exists = story_owner.var:story_cycle_elephant_name
			}
			effect = {
				story_owner = {
					add_character_flag = {
						flag = elephant_is_dying
					}
					trigger_event = dharma_elephants.201
				}
			}
		}
	}

	# Something happens - random events
	effect_group = {
		days = { 275 400 }
		chance = 50

		trigger = {
			exists = story_owner.var:story_cycle_elephant_name
			story_owner = {
				NOT = {
					has_character_flag = elephant_is_dying
				}
			}
		}

		first_valid = {
			triggered_effect = {
				trigger = { always = yes }
				effect = {
					story_owner = {
						trigger_event = {
							on_action = ongoing_elephant_events
						}
					}
				}
			}
		}
	}
}
