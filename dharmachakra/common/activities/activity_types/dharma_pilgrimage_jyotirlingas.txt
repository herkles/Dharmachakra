activity_dharma_pilgrimage_jyotirlingas = {
	is_shown = {
		highest_held_title_tier > tier_barony
		is_playable_character = yes
		OR = {# Must Venerate Shiva
			faith = { has_doctrine = sampradaya_shaivism_doctrine }
			has_character_modifier = bhakti_smartism_shiva
		}
		trigger_if = {
			limit = { is_ai = yes }
			is_at_war = no
			short_term_gold >= dharma_activity_cost
		}	
	}

	can_start = {
		OR = {# Must Venerate Shiva
			faith = { has_doctrine = sampradaya_shaivism_doctrine }
			has_character_modifier = bhakti_smartism_shiva
		}
		NOT = { faith = { has_doctrine = doctrine_pilgrimage_forbidden } }
	}

	can_start_showing_failures_only = {
		is_available_adult = yes
	}

	is_valid = {
		NOT = {
			has_variable = activity_invalidated
		}
		scope:host = {
			is_playable_character = yes
			NOT = { is_incapable = yes }
		}
		scope:activity = {
			OR = {
				NOT = { has_variable = starting_faith }
				# We could check whether the place you're going to is still a holy site in the new faith, but then that messes up all the people moving with you, so we just cancel the whole thing.
				scope:host.faith = var:starting_faith
			}
		}
	}

	on_invalidated = {
		# Host becomes unlanded
		if = {
			limit = {
				scope:host = { is_playable_character = no }
			}
			scope:activity = {
				activity_type = { save_scope_as = activity_type }
			}
			every_attending_character = {
				trigger_event = activity_system.0320
			}
		}
		if = {
			limit = {
				scope:host = { is_incapable = yes }
			}
			scope:activity = {
				activity_type = { save_scope_as = activity_type }
			}
			scope:host = {
				trigger_event = activity_system.0330
			}
			every_attending_character = {
				limit = { NOT = { this = scope:host } }
				trigger_event = activity_system.0331
			}
		}
		if = {
			limit = {
				NOT = { scope:host.faith = var:starting_faith }
			}
			scope:activity = {
				activity_type = { save_scope_as = activity_type }
				activity_location = { save_scope_as = location }
			}
			every_attending_character = {
				trigger_event = dharma_misc.0010
			}
		}
	}

	on_host_death = {
		scope:activity = {
			set_variable = {
				name = activity_invalidated
			}
		}
	}

	province_filter = all
	ai_province_filter = realm
	wait_time_before_start = { days = 7 }

	###################
	# OPTIONS
	###################
	options = {
		special_type = {
			dharma_local_pilgrimage_type_devotion = {
				default = yes	
				ai_will_do = {
					value = 10
					if = {
						limit = {
							has_trait = zealous
						}
						add = 5
					}
					if = {
						limit = {
							has_trait = diligent
						}
						add = 5
					}
				}
			}
			dharma_local_pilgrimage_type_observance = {		
				ai_will_do = {
					value = 10
					if = {
						limit = {
							has_trait = ambitious
						}
						add = 5
					}
					if = {
						limit = {
							has_trait = humble
						}
						add = 5
					}
				}
			}
			dharma_local_pilgrimage_type_vacation = {		
				ai_will_do = {
					value = 10
					if = {
						limit = {
							has_trait = lazy
						}
						add = 5
					}
					if = {
						limit = {
							has_trait = gregarious
						}
						add = 5
					}
				}
			}
		}
	}

	###################
	# PHASES
	###################

	phases = {
		dharma_pilgrimage_jyotirlingas_celebration_phase = {
			is_predefined = yes
			
			on_phase_active = {
				if = {
					limit = { this = scope:host	}
					if = {# Visiting Somnath
						limit = { involved_activity.activity_location.barony = title:b_somnath }
						scope:host = { trigger_event = dharma_hindu_pilgrimages.101 }
					}
					else_if = {# Visiting Mallikarjuna
						limit = { involved_activity.activity_location.barony = title:b_sriparvata }
						scope:host = { trigger_event = dharma_hindu_pilgrimages.106 }
					}
					else_if = {# Visiting Mahakaleshwar
						limit = { involved_activity.activity_location.barony = title:b_bhojpur }
						scope:host = { trigger_event = dharma_hindu_pilgrimages.110 }
					}
					else_if = {# Visiting Omkareshwar
						limit = { involved_activity.activity_location.barony = title:b_khandwa }
						scope:host = { trigger_event = dharma_hindu_pilgrimages.114 }
					}
					else_if = {# Visiting Baidyanath
						limit = { involved_activity.activity_location.barony = title:b_deogarh2 }
						scope:host = { trigger_event = dharma_hindu_pilgrimages.120 }
					}
					else_if = {# Visiting Bhimashankar
						limit = { involved_activity.activity_location.barony = title:b_bhimashankara }
						scope:host = { trigger_event = dharma_hindu_pilgrimages.124 }
					}
					else_if = {# Visiting Rameshwaram
						limit = { involved_activity.activity_location.barony = title:b_rameshvaram }
						scope:host = { trigger_event = dharma_hindu_pilgrimages.129 }
					}
					else_if = {# Visiting Nageshwar
						limit = { involved_activity.activity_location.barony = title:b_dvaraka }
						scope:host = { trigger_event = dharma_hindu_pilgrimages.134 }
					}
					else_if = {# Visiting Vishwanath
						limit = { involved_activity.activity_location.barony = title:b_varanasi }
						scope:host = { trigger_event = dharma_hindu_pilgrimages.138 }
					}
					else_if = {# Visiting Trimbakeshwar
						limit = { involved_activity.activity_location.barony = title:b_nasikya }
						scope:host = { trigger_event = dharma_hindu_pilgrimages.143 }
					}
					else_if = {# Visiting Kedarnath
						limit = { involved_activity.activity_location.barony = title:b_devalgarh }
						scope:host = { trigger_event = dharma_hindu_pilgrimages.148 }
					}
					else_if = {# Visiting Grishneshwar
						limit = { involved_activity.activity_location.barony = title:b_elapura }
						scope:host = { trigger_event = dharma_hindu_pilgrimages.153 }
					}
				}		
			}
			on_end = {
			}
		}
	}

	max_guest_arrival_delay_time = { days = 14 }

	# desc is only shown in debug AI watch window
	ai_will_do = {
		value = 50
		
		if = {
			limit = {
				has_trait = shy
			}
			add = -25
		}
		if = {
			limit = {
				has_trait = gregarious
			}
			add = 25
		}
		
		#Can you actually afford this?
		if = {
			limit = {
				NOT = { can_make_expensive_purchase_trigger = { PRICE = dharma_activity_cost } }
			}
			add = -50
		}
	}

	ai_check_interval = 60

	ai_will_select_province = {
		value = 10
	}
	
	is_location_valid = {
		OR = {
			trigger_if = {# Somnath
				limit = { exists = barony }
				barony = title:b_somnath
			}
			trigger_if = {# Mallikarjuna
				limit = { exists = barony }
				barony = title:b_sriparvata
			}
			trigger_if = {# Mahakaleshwar
				limit = { exists = barony }
				barony = title:b_bhojpur
			}
			trigger_if = {# Omkareshwar
				limit = { exists = barony }
				barony = title:b_khandwa
			}
			trigger_if = {# Baidyanath
				limit = { exists = barony }
				barony = title:b_deogarh2
			}
			trigger_if = {# Bhimashankar
				limit = { exists = barony }
				barony = title:b_bhimashankara
			}
			trigger_if = {# Rameshwaram
				limit = { exists = barony }
				barony = title:b_rameshvaram
			}
			trigger_if = {# Nageshwar
				limit = { exists = barony }
				barony = title:b_dvaraka
			}
			trigger_if = {# Vishwanath
				limit = { exists = barony }
				barony = title:b_varanasi
			}
			trigger_if = {# Trimbakeshwar
				limit = { exists = barony }
				barony = title:b_nasikya
			}
			trigger_if = {# Kedarnath
				limit = { exists = barony }
				barony = title:b_devalgarh
			}
			trigger_if = {# Grishneshwar
				limit = { exists = barony }
				barony = title:b_elapura
			}
		}
	}

	max_province_icons = 5
	
	cost = {
		gold = {
			add = {
				value = 0
				add = {
					value = dharma_activity_cost
					desc = hunt_base_cost
				}
			}
		}
	}

	ui_predicted_cost = {
		gold = {
			value = dharma_activity_cost

			# Make it a multiple of 5 (rounded up)
			divide = 5 
			ceiling = yes 
			multiply = 5
		}
	}
	cooldown = { days = 4380 }
	
	###################
	# ACTIVITY-SPECIFIC PULSES
	###################
	
	pulse_actions = {

	}

	on_start = {

	}

	on_enter_passive_state = {

	}

	###################
	# GUEST HANDLING
	###################

	max_guests = 30

	guest_invite_rules = {
		rules = {
			# Relations.
			2 = activity_invite_rule_lovers
			2 = activity_invite_rule_rivals_if_appropriate

			# Family.
			3 = activity_invite_rule_extended_family

			# Misc landless.
			5 = activity_invite_rule_knights

			# MP 
			6 = activity_invite_mp
		}
		defaults = {
			1 = activity_invite_rule_friends
			1 = activity_invite_rule_close_family
			3 = activity_invite_rule_courtiers
			4 = activity_invite_rule_guests
			1 = activity_invite_spouses
		}
	}

	can_be_activity_guest = {
		is_adult = yes
		is_available = yes
		in_diplomatic_range = scope:host
		is_playable_character = no
	}

	host_intents = {
		intents = { dharma_local_pilgrimage_worship_intent dharma_local_pilgrimage_model_intent dharma_local_pilgrimage_curiosity_intent }
		default = dharma_local_pilgrimage_worship_intent
	}

	guest_intents = {
		intents = { dharma_local_pilgrimage_worship_intent dharma_local_pilgrimage_model_intent dharma_local_pilgrimage_curiosity_intent }
		default = dharma_local_pilgrimage_worship_intent
	}

	guest_join_chance = {
		base = 10
		base_activity_modifier = yes

		# Scripted Modifiers
		activity_guest_shared_ai_accept_modifier = yes
	}
	
	on_complete = {

	}

	### Graphics


	#Fallback
	background = {
		texture = "gfx/interface/illustrations/event_scenes/ep2_holysite_indian.dds"
		environment = "environment_event_farms"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}

	window_characters = {
		guest = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				animation = personality_forgiving
			}
		}

		guest = {
			camera = camera_body	
			effect = {
				every_attending_character = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					add_to_list = characters
				}
			}
			scripted_animation = {
				animation = personality_content
			}
		}
		
		host = {
			camera = camera_body
			
			effect = {
				if = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					scope:host = {
						add_to_list = characters
					}
				}
			}

			scripted_animation = {
				animation = personality_bold
			}
		}
		travel_host = {
			camera = camera_body
			
			effect = {
				if = {
					limit = {
						NOT = {
							scope:host.location = scope:activity.activity_location
						}
					}
					scope:host = {
						add_to_list = characters
					}
				}
			}

			scripted_animation = {
				animation = idle
			}
		}

		guest = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				animation = personality_content
			}
		}

		guest = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				animation = happiness
			}
		}
	}
}
